name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      - name: Build project
        run: ./gradlew clean build -x test

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/graydang:latest .

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push image to DockerHub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/graydang:latest

      - name: Upload backend to EC2 via rsync
        run: |
          echo "${{ secrets.SERVER_SSH_KEY }}" > ec2-key.pem
          chmod 600 ec2-key.pem
          rsync -avz -e "ssh -o StrictHostKeyChecking=no -i ec2-key.pem" \
          ./ \
          ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/home/ec2-user/graydang/

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /home/ec2-user/graydang  # 또는 docker-compose.yml이 있는 디렉토리로 이동
            echo "DATASOURCE_URL_PROD=${{ secrets.DATASOURCE_URL_PROD }}" > .env
            echo "DATASOURCE_USERNAME_PROD=${{ secrets.DATASOURCE_USERNAME_PROD }}" >> .env
            echo "DATASOURCE_PASSWORD_PROD=${{ secrets.DATASOURCE_PASSWORD_PROD }}" >> .env
            echo "SPRING_PROFILES_ACTIVE=prod" >> .env

            docker compose down || true
            sleep 5
            docker compose pull
            docker compose up -d --build
